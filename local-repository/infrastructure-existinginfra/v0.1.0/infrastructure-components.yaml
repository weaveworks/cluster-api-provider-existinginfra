apiVersion: v1
kind: Namespace
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-existinginfra
  name: weavek8sops
---

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
  name: sealedsecrets.bitnami.com
  labels:
    cluster.x-k8s.io/provider: infrastructure-existinginfra
    cluster.x-k8s.io/v1alpha3: v1alpha3
spec:
  group: bitnami.com
  names:
    kind: SealedSecret
    listKind: SealedSecretList
    plural: sealedsecrets
    singular: sealedsecret
  scope: Namespaced
  version: v1alpha1
---

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
    cluster.x-k8s.io/provider: infrastructure-existinginfra
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: clusters.cluster.k8s.io
spec:
  group: cluster.k8s.io
  names:
    kind: Cluster
    plural: clusters
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            clusterNetwork:
              properties:
                pods:
                  properties:
                    cidrBlocks:
                      items:
                        type: string
                      type: array
                  required:
                  - cidrBlocks
                  type: object
                serviceDomain:
                  type: string
                services:
                  properties:
                    cidrBlocks:
                      items:
                        type: string
                      type: array
                  required:
                  - cidrBlocks
                  type: object
              required:
              - services
              - pods
              - serviceDomain
              type: object
            providerSpec:
              properties:
                value:
                  type: object
                valueFrom:
                  properties:
                    machineClass:
                      properties:
                        provider:
                          type: string
                      type: object
                  type: object
              type: object
          required:
          - clusterNetwork
          type: object
        status:
          properties:
            apiEndpoints:
              items:
                properties:
                  host:
                    type: string
                  port:
                    format: int64
                    type: integer
                required:
                - host
                - port
                type: object
              type: array
            errorMessage:
              type: string
            errorReason:
              type: string
            providerStatus:
              type: object
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-existinginfra
    cluster.x-k8s.io/v1alpha3: v1alpha3
    controller-tools.k8s.io: "1.0"
  name: machinesets.cluster.k8s.io
spec:
  group: cluster.k8s.io
  names:
    kind: MachineSet
    plural: machinesets
  scope: Namespaced
  subresources:
    scale:
      labelSelectorPath: .status.labelSelector
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.replicas
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            minReadySeconds:
              format: int32
              type: integer
            replicas:
              format: int32
              type: integer
            selector:
              type: object
            template:
              properties:
                metadata:
                  type: object
                spec:
                  properties:
                    configSource:
                      type: object
                    metadata:
                      type: object
                    providerSpec:
                      properties:
                        value:
                          type: object
                        valueFrom:
                          properties:
                            machineClass:
                              properties:
                                provider:
                                  type: string
                              type: object
                          type: object
                      type: object
                    taints:
                      items:
                        type: object
                      type: array
                    versions:
                      properties:
                        controlPlane:
                          type: string
                        kubelet:
                          type: string
                      required:
                      - kubelet
                      type: object
                  required:
                  - providerSpec
                  type: object
              type: object
          required:
          - selector
          type: object
        status:
          properties:
            availableReplicas:
              format: int32
              type: integer
            errorMessage:
              type: string
            errorReason:
              type: string
            fullyLabeledReplicas:
              format: int32
              type: integer
            observedGeneration:
              format: int64
              type: integer
            readyReplicas:
              format: int32
              type: integer
            replicas:
              format: int32
              type: integer
          required:
          - replicas
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-existinginfra
    cluster.x-k8s.io/v1alpha3: v1alpha3
    controller-tools.k8s.io: "1.0"
  name: machines.cluster.k8s.io
spec:
  group: cluster.k8s.io
  names:
    kind: Machine
    plural: machines
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            configSource:
              type: object
            metadata:
              type: object
            providerSpec:
              properties:
                value:
                  type: object
                valueFrom:
                  properties:
                    machineClass:
                      properties:
                        provider:
                          type: string
                      type: object
                  type: object
              type: object
            taints:
              items:
                type: object
              type: array
            versions:
              properties:
                controlPlane:
                  type: string
                kubelet:
                  type: string
              required:
              - kubelet
              type: object
          required:
          - providerSpec
          type: object
        status:
          properties:
            addresses:
              items:
                type: object
              type: array
            conditions:
              items:
                type: object
              type: array
            errorMessage:
              type: string
            errorReason:
              type: string
            lastOperation:
              properties:
                description:
                  type: string
                lastUpdated:
                  format: date-time
                  type: string
                state:
                  type: string
                type:
                  type: string
              type: object
            lastUpdated:
              format: date-time
              type: string
            nodeRef:
              type: object
            phase:
              type: string
            providerStatus:
              type: object
            versions:
              properties:
                controlPlane:
                  type: string
                kubelet:
                  type: string
              required:
              - kubelet
              type: object
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-existinginfra
    cluster.x-k8s.io/v1alpha3: v1alpha3
    controller-tools.k8s.io: "1.0"
  name: machinedeployments.cluster.k8s.io
spec:
  group: cluster.k8s.io
  names:
    kind: MachineDeployment
    plural: machinedeployments
  scope: Namespaced
  subresources:
    scale:
      labelSelectorPath: .status.labelSelector
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.replicas
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            minReadySeconds:
              format: int32
              type: integer
            paused:
              type: boolean
            progressDeadlineSeconds:
              format: int32
              type: integer
            replicas:
              format: int32
              type: integer
            revisionHistoryLimit:
              format: int32
              type: integer
            selector:
              type: object
            strategy:
              properties:
                rollingUpdate:
                  properties:
                    maxSurge:
                      oneOf:
                      - type: string
                      - type: integer
                    maxUnavailable:
                      oneOf:
                      - type: string
                      - type: integer
                  type: object
                type:
                  type: string
              type: object
            template:
              properties:
                metadata:
                  type: object
                spec:
                  properties:
                    configSource:
                      type: object
                    metadata:
                      type: object
                    providerSpec:
                      properties:
                        value:
                          type: object
                        valueFrom:
                          properties:
                            machineClass:
                              properties:
                                provider:
                                  type: string
                              type: object
                          type: object
                      type: object
                    taints:
                      items:
                        type: object
                      type: array
                    versions:
                      properties:
                        controlPlane:
                          type: string
                        kubelet:
                          type: string
                      required:
                      - kubelet
                      type: object
                  required:
                  - providerSpec
                  type: object
              type: object
          required:
          - selector
          - template
          type: object
        status:
          properties:
            availableReplicas:
              format: int32
              type: integer
            observedGeneration:
              format: int64
              type: integer
            readyReplicas:
              format: int32
              type: integer
            replicas:
              format: int32
              type: integer
            unavailableReplicas:
              format: int32
              type: integer
            updatedReplicas:
              format: int32
              type: integer
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-existinginfra
    cluster.x-k8s.io/v1alpha3: v1alpha3
    controller-tools.k8s.io: "1.0"
  name: machineclasses.cluster.k8s.io
spec:
  group: cluster.k8s.io
  names:
    kind: MachineClass
    plural: machineclasses
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        providerSpec:
          type: object
      required:
      - providerSpec
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

# apiVersion: v1
# kind: List
# items:
#   - apiVersion: v1
#     kind: ServiceAccount
#     metadata:
#       name: tiller
#       namespace: kube-system
#   - apiVersion: rbac.authorization.k8s.io/v1
#     kind: ClusterRoleBinding
#     metadata:
#       name: tiller-cluster-role
#     roleRef:
#       apiGroup: rbac.authorization.k8s.io
#       kind: ClusterRole
#       name: cluster-admin
#     subjects:
#     - kind: ServiceAccount
#       name: tiller
#       namespace: kube-system
#   - apiVersion: apps/v1
#     kind: Deployment
#     metadata:
#       labels:
#         app: helm
#         name: tiller
#       name: tiller-deploy
#       namespace: kube-system
#     spec:
#       replicas: 1
#       selector:
#         matchLabels:
#           app: helm
#           name: tiller
#       strategy: {}
#       template:
#         metadata:
#           labels:
#             app: helm
#             name: tiller
#         spec:
#           automountServiceAccountToken: true
#           containers:
#           - env:
#             - name: TILLER_NAMESPACE
#               value: kube-system
#             - name: TILLER_HISTORY_MAX
#               value: "0"
#             image: gcr.io/kubernetes-helm/tiller:v2.15.0
#             imagePullPolicy: IfNotPresent
#             livenessProbe:
#               httpGet:
#                 path: /liveness
#                 port: 44135
#               initialDelaySeconds: 1
#               timeoutSeconds: 1
#             name: tiller
#             ports:
#             - containerPort: 44134
#               name: tiller
#             - containerPort: 44135
#               name: http
#             readinessProbe:
#               httpGet:
#                 path: /readiness
#                 port: 44135
#               initialDelaySeconds: 1
#               timeoutSeconds: 1
#             resources: {}
#           serviceAccountName: tiller
#   - apiVersion: v1
#     kind: Service
#     metadata:
#       labels:
#         app: helm
#         name: tiller
#       name: tiller-deploy
#       namespace: kube-system
#     spec:
#       ports:
#       - name: tiller
#         port: 44134
#         targetPort: tiller
#       selector:
#         app: helm
#         name: tiller
#       type: ClusterIP
#   - apiVersion: apiextensions.k8s.io/v1beta1
#     kind: CustomResourceDefinition
#     metadata:
#       name: helmreleases.helm.fluxcd.io
#     spec:
#       group: helm.fluxcd.io
#       names:
#         kind: HelmRelease
#         listKind: HelmReleaseList
#         plural: helmreleases
#         shortNames:
#         - hr
#       scope: Namespaced
#       additionalPrinterColumns:
#         - JSONPath: .status.releaseName
#           name: Release
#           type: string
#         - JSONPath: .status.releaseStatus
#           name: Status
#           type: string
#         - JSONPath: .status.conditions[?(@.type=="Released")].message
#           name: Message
#           type: string
#         - JSONPath: .metadata.creationTimestamp
#           name: Age
#           type: date
#       subresources:
#         status: {}
#       version: v1
#       versions:
#         - name: v1
#           served: true
#           storage: true
#       validation:
#         openAPIV3Schema:
#           properties:
#             spec:
#               required: ['chart']
#               properties:
#                 releaseName:
#                   description: The Helm release name. If not supplied, it will be generated by affixing the
#                     namespace to the resource name.
#                   type: string
#                   pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
#                 targetNamespace:
#                   description: The Helm release namespace. If not supplied, the namespace will be the same
#                     as the resource namespace.
#                   type: string
#                   pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
#                 timeout:
#                   description: Helm install or upgrade timeout in seconds
#                   type: integer
#                   format: int64
#                 resetValues:
#                   description: If supplied will reset values on helm upgrade
#                   type: boolean
#                 forceUpgrade:
#                   description: If supplied will force Helm upgrade through delete/recreate
#                   type: boolean
#                 rollback:
#                   type: object
#                   properties:
#                     enable:
#                       description: If set, will perform rollbacks for this release on upgrade failures
#                       type: boolean
#                     force:
#                       description: If set, will force resource update through delete/recreate if needed
#                       type: boolean
#                     recreate:
#                       type: boolean
#                     disableHooks:
#                       description: If set, will prevent hooks from running during rollback
#                       type: boolean
#                     timeout:
#                       description: Time in seconds to wait for any individual Kubernetes operation,
#                         defaults to 300 seconds
#                       type: integer
#                       format: int64
#                     wait:
#                       description: If set, will wait until the minimum number of Pods of a Deployment
#                         are in a ready state before marking the release as successful
#                       type: boolean
#                 valueFileSecrets:
#                   description: Deprecated! Use valuesFrom.secretKeyRef instead
#                   type: array
#                   items:
#                     type: object
#                     required: ['name']
#                     properties:
#                       name:
#                         description: Name of the secret, must be in the same namespace as the HelmRelease
#                         type: string
#                 valuesFrom:
#                   type: array
#                   items:
#                     type: object
#                     properties:
#                       configMapKeyRef:
#                         type: object
#                         required: ['name']
#                         properties:
#                           name:
#                             description: Name of the configmap, must be in the same namespace as the HelmRelease
#                             type: string
#                           key:
#                             description: Key in the configmap to get the values from, defaults to values.yaml
#                             type: string
#                           optional:
#                             description: If set, successful retrieval of the values file is no longer mandatory
#                             type: boolean
#                       secretKeyRef:
#                         type: object
#                         required: ['name']
#                         properties:
#                           name:
#                             description: Name of the secret, must be in the same namespace as the HelmRelease
#                             type: string
#                           key:
#                             description: Key in the secret to get the values from, defaults to values.yaml
#                             type: string
#                           optional:
#                             description: If set, successful retrieval of the values file is no longer mandatory
#                             type: boolean
#                       externalSourceRef:
#                         type: object
#                         required: ['url']
#                         properties:
#                           url:
#                             description: URL of the values.yaml
#                             type: string
#                           optional:
#                             description: If set, successful retrieval of the values file is no longer mandatory
#                             type: boolean
#                       chartFileRef:
#                         type: object
#                         required: ['path']
#                         properties:
#                           path:
#                             description: path within the helm chart (from git repo) where values.yaml is located
#                             type: string
#                           optional:
#                             description: If set, successful retrieval of the values file is no longer mandatory
#                             type: boolean
#                     oneOf:
#                     - required: ['configMapKeyRef']
#                     - required: ['secretKeyRef']
#                     - required: ['externalSourceRef']
#                     - required: ['chartFileRef']
#                 values:
#                   description: content of values.yaml
#                   type: object
#                 chart:
#                   oneOf:
#                   - required: ['git', 'path']
#                     properties:
#                       git:
#                         description: Git URL e.g. git@github.com:org/repo
#                         type: string
#                         format: git # not defined by OAS
#                       path:
#                         description: Path inside the git repository where the Helm chart is
#                         type: string
#                       ref:
#                         description: Git branch, defaults to master
#                         type: string
#                       skipDepUpdate:
#                         description: If set, does not run 'dep' update (assume requirements.yaml is already fulfilled)
#                         type: boolean
#                   - required: ['repository', 'name', 'version']
#                     properties:
#                       repository:
#                         description: Helm repository URL
#                         type: string
#                         format: url # not defined by OAS
#                       name:
#                         description: Helm chart name
#                         type: string
#                       version:
#                         description: Helm chart version
#                         type: string
#                         format: semver # not defined by OAS
#                       chartPullSecret:
#                         properties:
#                           name:
#                             description: Helm repository basic auth (not implemented)
#                             type: string
#   - apiVersion: rbac.authorization.k8s.io/v1
#     kind: ClusterRole
#     metadata:
#       labels:
#         app: helm-operator
#         chart: helm-operator-0.2.1
#         heritage: Tiller
#         release: helm-operator
#       name: helm-operator
#     rules:
#     - apiGroups:
#       - '*'
#       resources:
#       - '*'
#       verbs:
#       - '*'
#     - nonResourceURLs:
#       - '*'
#       verbs:
#       - '*'
#   - apiVersion: rbac.authorization.k8s.io/v1
#     kind: ClusterRoleBinding
#     metadata:
#       labels:
#         app: helm-operator
#         chart: helm-operator-0.2.1
#         heritage: Tiller
#         release: helm-operator
#       name: helm-operator
#     roleRef:
#       apiGroup: rbac.authorization.k8s.io
#       kind: ClusterRole
#       name: helm-operator
#     subjects:
#     - kind: ServiceAccount
#       name: flux
#       namespace: weavek8sops
#   - apiVersion: v1
#     kind: ConfigMap
#     data:
#       config: |
#         apiVersion: v1
#         clusters: []
#         contexts:
#         - context:
#             cluster: ""
#             namespace: default
#             user: ""
#           name: default
#         current-context: default
#         kind: Config
#         preferences: {}
#         users: []
#     metadata:
#       name: helm-operator-kube-config
#       namespace: weavek8sops
#   - apiVersion: extensions/v1beta1
#     kind: Deployment
#     metadata:
#       labels:
#         app: helm-operator
#         chart: helm-operator-0.2.1
#         heritage: Tiller
#         release: helm-operator
#       name: helm-operator
#       namespace: weavek8sops
#     spec:
#       progressDeadlineSeconds: 600
#       replicas: 1
#       revisionHistoryLimit: 10
#       selector:
#         matchLabels:
#           app: helm-operator
#           release: helm-operator
#       strategy:
#         rollingUpdate:
#           maxSurge: 25%
#           maxUnavailable: 25%
#         type: RollingUpdate
#       template:
#         metadata:
#           annotations:
#             checksum/repositories: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
#           labels:
#             app: helm-operator
#             release: helm-operator
#         spec:
#           containers:
#           - args:
#             - --log-format=fmt
#             - --git-timeout=20s
#             - --git-poll-interval=5m
#             - --charts-sync-interval=3m
#             - --update-chart-deps=true
#             - --log-release-diffs=false
#             - --workers=2
#             - --tiller-namespace=kube-system
#             image: docker.io/fluxcd/helm-operator:1.0.0-rc3
#             imagePullPolicy: IfNotPresent
#             livenessProbe:
#               failureThreshold: 3
#               httpGet:
#                 path: /healthz
#                 port: 3030
#                 scheme: HTTP
#               initialDelaySeconds: 1
#               periodSeconds: 10
#               successThreshold: 1
#               timeoutSeconds: 5
#             name: flux-helm-operator
#             ports:
#             - containerPort: 3030
#               name: http
#               protocol: TCP
#             readinessProbe:
#               failureThreshold: 3
#               httpGet:
#                 path: /healthz
#                 port: 3030
#                 scheme: HTTP
#               initialDelaySeconds: 1
#               periodSeconds: 10
#               successThreshold: 1
#               timeoutSeconds: 5
#             resources:
#               requests:
#                 cpu: 50m
#                 memory: 64Mi
#             terminationMessagePath: /dev/termination-log
#             terminationMessagePolicy: File
#             volumeMounts:
#             - mountPath: /etc/fluxd/ssh
#               name: git-key
#               readOnly: true
#           dnsPolicy: ClusterFirst
#           restartPolicy: Always
#           schedulerName: default-scheduler
#           securityContext: {}
#           serviceAccount: flux
#           serviceAccountName: flux
#           terminationGracePeriodSeconds: 30
#           volumes:
#           - name: git-key
#             secret:
#               defaultMode: 256
#               secretName: flux-git-deploy
# ---


# #
